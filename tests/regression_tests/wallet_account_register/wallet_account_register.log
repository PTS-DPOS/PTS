default (unlocked) >>> wallet_account_create test
"PTS7sBALSBA1rNiSWA1kqpponAXqrCXhRztLGwSxZjzLa3txJdUmp"
default (unlocked) >>> wallet_account_register test delegate0 null 100
Command failed with exception: Assert Exception (10)
this->name.size() >= PTS_INITIAL_MIN_LENGTH: Account names shorter than 5 characters cannot be registered at this time.











default (unlocked) >>> wallet_account_create local
"PTS8my3ctcuLgAhGP4TVoKe6twNcSqJQBrjCcY4qHsL7CR2utUL41"
default (unlocked) >>> wallet_account_register local delegate0 null 100
Command failed with exception: Assert Exception (10)
banned_names.find( this->name ) == banned_names.end(): This account name is a reserved word. Operation failed.











default (unlocked) >>> wallet_account_create tests
"PTS8mbyATjXztLhJvpxgrtYLELNgsQ48NkATL9svARwLvb49EPPk4"
default (unlocked) >>> wallet_transfer 1000 PTS delegate0 tests
TIMESTAMP           BLOCK     FROM                TO                  AMOUNT                  MEMO                                        FEE                 ID      
======================================================================================================================================================================
<d-ign></d-ign>PENDING   delegate0           tests               1,000.000000 PTS                                                    25.000000 PTS       <d-ign></d-ign>
default (unlocked) >>> debug_advance_time 1 blocks
OK
default (unlocked) >>> debug_wait 5
OK
default (unlocked) >>> wallet_account_balance tests
ACCOUNT                         BALANCE                     
============================================================
tests                           1,000.000000 PTS            
default (unlocked) >>> blockchain_get_account tests
No account found.
default (unlocked) >>> help wallet_account_register
Usage:
wallet_account_register <account_name> <pay_from_account> [public_data] [delegate_pay_rate] [account_type]   Updates the data published about a given account
Updates the data published about a given account

Parameters:
  account_name (account_name, required): the account that will be updated
  pay_from_account (account_name, required): the account from which fees will be paid
  public_data (json_variant, optional, defaults to null): public data about the account
  delegate_pay_rate (uint8_t, optional, defaults to -1): -1 for non-delegates; otherwise the percent of delegate pay to accept per produced block
  account_type (string, optional, defaults to "titan_account"): titan_account | public_account - public accounts do not receive memos and all payments are made to the active key

Returns:
  transaction_record

aliases: register
default (unlocked) >>> wallet_account_register tests tests null 100
TIMESTAMP           BLOCK     FROM                TO                  AMOUNT                  MEMO                                        FEE                 ID      
======================================================================================================================================================================
<d-ign></d-ign>PENDING   tests               tests               0.000000 PTS            register tests as a delegate                100.123355 PTS      <d-ign></d-ign>
default (unlocked) >>> debug_advance_time 1 blocks
OK
default (unlocked) >>> debug_wait 2
OK
default (unlocked) >>> blockchain_get_account tests
Name: tests
Registered: <d-ign></d-ign>
Last Updated: <d-ign></d-ign>
Owner Key: PTS8mbyATjXztLhJvpxgrtYLELNgsQ48NkATL9svARwLvb49EPPk4
Active Key History:
- PTS8mbyATjXztLhJvpxgrtYLELNgsQ48NkATL9svARwLvb49EPPk4, last used <d-ign></d-ign>

ID    NAME (* next in line)           APPROVAL       PRODUCED MISSED   RELIABILITY   PAY RATE PAY BALANCE         LAST BLOCK  VERSION     
==========================================================================================================================================
102   tests                           0.00000000 %   0        0        N/A           100 %    0.000000 PTS        NONE                    

default (unlocked) >>> quit
